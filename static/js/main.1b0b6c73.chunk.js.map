{"version":3,"sources":["components/learning-components/FirstComponent.jsx","components/learning-components/SecondComponent.jsx","components/learning-components/ThirdComponent.jsx","components/counters/Counter.jsx","App.js","logo.svg","reportWebVitals.js","index.js"],"names":["FirstComponent","className","Component","SecondComponent","ThirdComponent","Counter","state","counter","increment","bind","reset","cellSpacing","by","incrementMethod","this","onClick","console","log","setState","prevState","CounterButton","props","defaultProps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAWeA,E,uKART,OACE,qBAAKC,UAAU,iBAAf,yC,GAHqBC,aCUdC,E,uKART,OACE,qBAAKF,UAAU,kBAAf,0C,GAHsBC,aCQfE,MARd,WACK,OACE,qBAAKH,UAAU,iBAAf,sC,OCCFI,G,wDACJ,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,QAAS,GAEX,EAAKC,UAAY,EAAKA,UAAUC,KAAf,gBACjB,EAAKC,MAAQ,EAAKA,MAAMD,KAAX,gBAND,E,qDAUZ,OACE,sBAAKR,UAAU,UAAf,UACE,mDACA,wBAAOU,YAAY,MAAMV,UAAU,kBAAnC,UACE,+BACE,mCAAK,cAAC,EAAD,CAAeW,GAAI,EAAIC,gBAAiBC,KAAKN,UAA7C,eAAL,OACA,mCAAK,cAAC,EAAD,CAAeI,IAAK,EAAGC,gBAAiBC,KAAKN,UAA7C,eAAL,UAGF,+BACE,mCAAK,cAAC,EAAD,CAAeI,GAAI,EAAIC,gBAAiBC,KAAKN,UAA7C,eAAL,OACA,mCAAK,cAAC,EAAD,CAAeI,IAAK,EAAGC,gBAAiBC,KAAKN,UAA7C,eAAL,UAGF,+BACE,mCAAK,cAAC,EAAD,CAAeI,GAAI,GAAKC,gBAAiBC,KAAKN,UAA9C,eAAL,OACA,mCAAK,cAAC,EAAD,CAAeI,IAAK,GAAIC,gBAAiBC,KAAKN,UAA9C,eAAL,UAGF,+BACE,mCAAK,cAAC,EAAD,CAAeI,GAAI,GAAKC,gBAAiBC,KAAKN,UAA9C,eAAL,OACA,mCAAK,cAAC,EAAD,CAAeI,IAAK,GAAIC,gBAAiBC,KAAKN,UAA9C,eAAL,UAGF,+BACE,mCAAK,cAAC,EAAD,CAAeI,GAAI,IAAMC,gBAAiBC,KAAKN,UAA/C,eAAL,OACA,mCAAK,cAAC,EAAD,CAAeI,IAAK,IAAKC,gBAAiBC,KAAKN,UAA/C,eAAL,UAEF,8BAAK,yBACL,uBAAMP,UAAU,oBAAhB,cAAsCa,KAAKR,MAAMC,QAAjD,OACA,gCACE,uBACA,wBAAQN,UAAU,cAAcc,QAASD,KAAKJ,MAA9C,2BAGJ,8BAAK,yBAAY,8BAAK,yBACtB,wBAAQT,UAAU,mBAAlB,2E,gCAMIW,GACRI,QAAQC,IAAR,kCAAuCL,IACvCE,KAAKI,UAAS,SAACC,GACb,MAAO,CAAEZ,QAASY,EAAUZ,QAAUK,Q,8BAKxCI,QAAQC,IAAI,wBACZH,KAAKI,SAAS,CAAEX,QAAQ,Q,GA9DNL,cAkEhBkB,E,kDACJ,aAAe,IAAD,8BACZ,gBACKd,MAAQ,CACXC,QAAS,GAEX,EAAKC,UAAY,EAAKA,UAAUC,KAAf,gBALL,E,qDASZ,OACE,sBAAKR,UAAU,gBAAf,UACE,uBACA,uBACA,yBAAQc,QAASD,KAAKN,UAAtB,cAAmCM,KAAKO,MAAMT,GAA9C,Y,kCAMJE,KAAKI,SAAS,CACZX,QAASO,KAAKR,MAAMC,QAAUO,KAAKO,MAAMT,KAE3CE,KAAKO,MAAMR,gBAAgBC,KAAKO,MAAMT,Q,GAvBdV,aA4B5BG,EAAQiB,aAAe,CACrBV,GAAI,GAKSP,QChGTkB,GCRS,I,6KDUX,OACE,qBAAKtB,UAAU,MAAf,SACE,cAAC,EAAD,sB,GAJUC,cAuBHqB,GAbkBrB,YAalBqB,GEnBAC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1b0b6c73.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nclass FirstComponent extends Component {\r\n    render() {\r\n      return (\r\n        <div className=\"firstComponent\">\r\n          This is first component\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default FirstComponent;","import React, {Component} from 'react';\r\nclass SecondComponent extends Component {\r\n    render() {\r\n      return (\r\n        <div className=\"secondComponent\">\r\n          This is second component\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default SecondComponent; ","import React from 'react';\r\n function ThirdComponent() {\r\n      return (\r\n        <div className=\"thirdComponent\">\r\n          This is third component\r\n        </div>\r\n      );\r\n  }\r\n\r\nexport default ThirdComponent;","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Counter.css\";\r\n\r\nclass Counter extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      counter: 0,\r\n    };\r\n    this.increment = this.increment.bind(this);\r\n    this.reset = this.reset.bind(this);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"counter\">\r\n        <h1> Counter Machine </h1>\r\n        <table cellSpacing=\"0px\" className=\"buttonGridTable\">\r\n          <tr>\r\n            <td> <CounterButton by={+1} incrementMethod={this.increment}> </CounterButton> </td>\r\n            <td> <CounterButton by={-1} incrementMethod={this.increment}> </CounterButton> </td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td> <CounterButton by={+5} incrementMethod={this.increment}> </CounterButton> </td>\r\n            <td> <CounterButton by={-5} incrementMethod={this.increment}> </CounterButton> </td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td> <CounterButton by={+10} incrementMethod={this.increment}> </CounterButton> </td>\r\n            <td> <CounterButton by={-10} incrementMethod={this.increment}> </CounterButton> </td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td> <CounterButton by={+50} incrementMethod={this.increment}> </CounterButton> </td>\r\n            <td> <CounterButton by={-50} incrementMethod={this.increment}> </CounterButton> </td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td> <CounterButton by={+100} incrementMethod={this.increment}> </CounterButton> </td>\r\n            <td> <CounterButton by={-100} incrementMethod={this.increment}> </CounterButton> </td>\r\n          </tr>\r\n          <div><br /></div>\r\n          <span className=\"countDisplayField\"> {this.state.counter} </span>\r\n          <div>\r\n            <br/>\r\n            <button className=\"resetButton\" onClick={this.reset}> Reset </button>\r\n          </div>\r\n        </table>\r\n        <div><br /></div><div><br /></div>\r\n        <footer className=\"copyRightsFooter\"> &copy; Copyright 2020-2022 by Vamsi. All Rights Reserved.</footer>\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n  increment(by) {\r\n    console.log(`Inside increment method ${by}`);\r\n    this.setState((prevState) => {\r\n      return { counter: prevState.counter + by };\r\n    });\r\n  }\r\n\r\n  reset(){\r\n    console.log(\"Entered Reset Method\");\r\n    this.setState({ counter:0})\r\n  }\r\n}\r\n\r\nclass CounterButton extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      counter: 0,\r\n    };\r\n    this.increment = this.increment.bind(this);\r\n  }\r\n  //Define initial state in a constructor\r\n  render() {\r\n    return (\r\n      <div className=\"counterButton\">\r\n        <br></br>\r\n        <br></br>\r\n        <button onClick={this.increment}> {this.props.by} </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  increment() {\r\n    this.setState({\r\n      counter: this.state.counter + this.props.by,\r\n    });\r\n    this.props.incrementMethod(this.props.by);\r\n  }\r\n}\r\n\r\n\r\nCounter.defaultProps = {\r\n  by: 1,\r\n};\r\nCounter.propTypes = {\r\n  by: PropTypes.number,\r\n};\r\nexport default Counter;\r\n","import React, { Component } from \"react\";\nimport FirstComponent from \"./components/learning-components/FirstComponent\";\nimport SecondComponent from \"./components/learning-components/SecondComponent\";\nimport ThirdComponent from \"./components/learning-components/ThirdComponent\";\nimport Counter from \"./components/counters/Counter\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Counter> </Counter>\n      </div>\n    );\n  }\n}\n\nclass LearningComponents extends Component {\n  render() {\n    return (\n      <div className=\"learningComponents\">\n        <FirstComponent> </FirstComponent> \n        <SecondComponent> </SecondComponent>\n        <SecondComponent> </SecondComponent>\n        <ThirdComponent> </ThirdComponent>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}